name: Deploy
on:
  push:
    branches:
      - master
      - source
  pull_request:
    branches:
      - master
      - source
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7'
    
    - name: Fix bundler and dependencies
      run: |
        # Install a compatible bundler version for Ruby 2.7
        gem install bundler -v 2.3.26 --no-document
        
        # Create bundle directory first
        mkdir -p ~/.bundle
        
        # Create a .bundler config file to resolve URI gem issues
        cat > ~/.bundle/config << EOF
        ---
        BUNDLE_ONLY: ""
        BUNDLE_PATH: "vendor/bundle"
        BUNDLE_DISABLE_SHARED_GEMS: "true"
        BUNDLE_JOBS: "4"
        EOF
        
        # Make sure we're using our newly installed bundler
        export GEM_HOME="$(gem env home)"
        export PATH="$GEM_HOME/bin:$PATH"
        
        # Verify we're using the right bundler
        bundler -v
        
        # Install dependencies
        bundle _2.3.26_ install --path vendor/bundle --jobs 4 --retry 3
    
    - name: Setup deploy options
      id: setup
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        if [[ ${GITHUB_REF} = refs/pull/*/merge ]]; then # pull request
          echo "SRC_BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_OUTPUT
          echo "NO_PUSH=--no-push" >> $GITHUB_OUTPUT
        elif [[ ${GITHUB_REF} = refs/heads/* ]]; then # branch, e.g. master, source etc
          echo "SRC_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        fi
        if [[ ${{ github.repository }} = *.github.io ]]; then # user/org repo
          echo "DEPLOY_BRANCH=master" >> $GITHUB_OUTPUT
        else
          echo "DEPLOY_BRANCH=gh-pages" >> $GITHUB_OUTPUT
        fi
    
    - name: Fix script without Git detecting changes
      run: |
        git update-index --assume-unchanged bin/deploy
        tr -d '\r' < bin/deploy > temp_deploy && mv temp_deploy bin/deploy
        chmod +x bin/deploy
    
    - name: Deploy website with specific bundler
      run: |
        # Ensure we're using the right bundler for deployment
        export GEM_HOME="$(gem env home)"
        export PATH="$GEM_HOME/bin:$PATH"
        
        # Use specific bundler version
        bin/deploy --verbose ${{ steps.setup.outputs.NO_PUSH }} \
          --src ${{ steps.setup.outputs.SRC_BRANCH }} \
          --deploy ${{ steps.setup.outputs.DEPLOY_BRANCH }} << EOF
        y
        EOF
